



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table.
i. Business = ID(primary key): 10000
ii. Hours = BusinessID: 1562
iii. Category = BusinessID: 2643
iv. Attribute = BusinessID = 1115
v. Review = ID(primary key): 10000, BusinessID: 8090, UserID: 9581 
vi. Checkin = BusinessID: 493 
vii. Photo = ID(primary key): 10000, BusinessID: 6493
viii. Tip = UserID: 537, BusinessID: 3979
ix. User = ID(primary key): 10000
x. Friend = UserID: 11
xi. Elite_years = UserID: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer: 
SELECT * FROM USER
/* Selecting all columns to know if any contains null values */
WHERE id IS NULL 
 OR name IS NULL
 OR review_count IS NULL
 OR yelping_since IS NULL
 OR useful IS NULL
 OR funny IS NULL
 OR cool IS NULL
 OR fans IS NULL 
 OR average_stars IS NULL
 OR compliment_hot IS NULL
 OR compliment_more IS NULL
 OR compliment_profile IS NULL
 OR compliment_cute IS NULL
 OR compliment_list IS NULL
 OR compliment_note IS NULL
 OR compliment_plain IS NULL
 OR compliment_cool IS NULL
 OR compliment_funny IS NULL
 OR compliment_writer IS NULL
 OR compliment_photos IS NULL
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
SELECT city,SUM(review_count) AS Total_review 
FROM business 
GROUP BY city 
ORDER BY Total_review DESC

	
	Copy and Paste the Result Below:
	                            +-----------------+----------------+ 
                                    | city            |   Total_review | 
                                    +-----------------+----------------+ 
                                    | Las Vegas       | 82854          | 
                                    | Phoenix         | 34503          |
                                    | Toronto         | 24113          |
                                    | Scottsdale      | 20614          |
                                    | Charlotte       | 12523          |
                                    | Henderson       | 10871          |
                                    | Tempe           | 10504          |
                                    | Pittsburgh      |  9798          |
                                    | Montréal        |  9448          |
                                    | Chandler        |  8112          |
                                    | Mesa            |  6875          |
                                    | Gilbert         |  6380          |
                                    | Cleveland       |  5593          |
                                    | Madison         |  5265          |
                                    | Glendale        |  4406          |
                                    | Mississauga     |  3814          |
                                    | Edinburgh       |  2792          |
                                    | Peoria          |  2624          |
                                    | North Las Vegas |  2438          |
                                    | Markham         |  2352          |
                                    | Champaign       |  2029          |
                                    | Stuttgart       |  1849          |
                                    | Surprise        |  1520          |
                                    | Lakewood        |  1465          |
                                    | Goodyear        |  1155          |
                                    +-----------------+----------------+ (Output limit exceeded, 25 of 362 total rows shown)


	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT Count(Stars) AS Numbers, Stars
FROM business
WHERE city = "Avon"
GROUP BY stars



Copy and Paste the Resulting Table Below (2 columns – star rating and count):
                    +---------+-------+
                    | Numbers | stars | 
                    +---------+-------+
                    |       1 |   1.5 |
                    |       2 |   2.5 |
                    |       3 |   3.5 |
                    |       2 |   4.0 |
                    |       1 |   4.5 |
                    |       1 |   5.0 |
                    +---------+-------+


ii. Beachwood

SQL code used to arrive at answer:
SELECT Count(Stars) AS Numbers, Stars
FROM business
WHERE city = "Beachwood"
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
                    +---------+-------+ 
                    | Numbers | stars | 
                    +---------+-------+
                    |       1 |   2.0 |
                    |       1 |   2.5 |
                    |       2 |   3.0 |
                    |       2 |   3.5 |
                    |       1 |   4.0 |
                    |       2 |   4.5 |
                    |       5 |   5.0 |
                    +---------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
SELECT review_count, name 
FROM user 
ORDER BY review_count DESC 
LIMIT 3

		
	Copy and Paste the Result Below:
                          +--------------+--------+ 
                          | review_count | name   | 
                          +--------------+--------+ 
                          |         2000 | Gerald |
                          |         1629 | Sara   |
                          |         1339 | Yuri   |
                          +--------------+--------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
 No, not necesarily they are other factors involved because Amy has just 609 reviews and she has 503 fans but Gerald has about 2000 reviews and he has just 253 fans. 

SQL CODE:
 SELECT name,review_count,fans
 FROM user
 ORDER BY fans DESC	

RESULT:
                                    +-----------+--------------+------+
                                    | name      | review_count | fans | 
                                    +-----------+--------------+------+
                                    | Amy       |          609 |  503 |
                                    | Mimi      |          968 |  497 |
                                    | Harald    |         1153 |  311 |
                                    | Gerald    |         2000 |  253 |
                                    | Christine |          930 |  173 |
                                    | Lisa      |          813 |  159 |
                                    | Cat       |          377 |  133 |
                                    | William   |         1215 |  126 |
                                    | Fran      |          862 |  124 |
                                    | Lissa     |          834 |  120 |
                                    | Mark      |          861 |  115 |
                                    | Tiffany   |          408 |  111 |
                                    | bernice   |          255 |  105 |
                                    | Roanna    |         1039 |  104 |
                                    | Angela    |          694 |  101 |
                                    | .Hon      |         1246 |  101 |
                                    | Ben       |          307 |   96 |
                                    | Linda     |          584 |   89 |
                                    | Christina |          842 |   85 |
                                    | Jessica   |          220 |   84 |
                                    | Greg      |          408 |   81 |
                                    | Nieves    |          178 |   80 |
                                    | Sui       |          754 |   78 |
                                    | Yuri      |         1339 |   76 |
                                    | Nicole    |          161 |   73 |
                                    +-----------+--------------+------+ (Output limit exceeded, 25 of 10000 total rows shown)


	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
 Yes. There are 1780 reviews with “love” and 232 reviews with “hate”

	
	SQL code used to arrive at answer:
 SELECT COUNT(*)
 FROM review 
 WHERE text LIKE "%love%" 

 SELECT COUNT(*)
 FROM review
 WHERE text LIKE “%hate%” 

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
 SELECT name,fans
 FROM user
 ORDER BY fans DESC
 LIMIT 10

	
	
	Copy and Paste the Result Below:
                     +-----------+------+
                     | name      | fans |
                     +-----------+------+
                     | Amy       |  503 |
                     | Mimi      |  497 |
                     | Harald    |  311 |
                     | Gerald    |  253 |
                     | Christine |  173 |
                     | Lisa      |  159 |
                     | Cat       |  133 |
                     | William   |  126 |
                     | Fran      |  124 |
                     | Lissa     |  120 |
                     +-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   Yes, they do. I picked Las Vegas and Food for this question. The restaurants with 2.5 stars open from 8:00-22:00 while the place with 4.0 stars open from 10:00-19:00. 


ii. Do the two groups you chose to analyze have a different number of reviews?
   Yes, the group with 2.5 stars has 6 reviews which is less than that of the group with 4 stars whose review is 30.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
   Not really, they both have different locations.

+-----------------------------+-----------+----------+------+------------------------+--------------+-----------------------------+------------+
| name                        | city      | category | stars | hours                 | review_count | address                     | postal_code| 
+-----------------------------+-----------+----------+------+------------------------+--------------+-----------------------------+------------+ 
| Walgreen                    | Las Vegas | Food     |   2.5 | Saturday| 8:00-22:00  |            6 | 3808 E Tropicana Ave        | 89121      | 
| Sweet Ruby Jane Confections | Las Vegas | Food     |   4.0 | Saturday| 10:00-19:00 |           30 | 8975 S Eastern Ave, Ste 3-B | 89123      | 
+-----------------------------+-----------+----------+------+------------------------+--------------+-----------------------------+-------------+ 


SQL code used for analysis:
SELECT business.name , business.city , category.category , business.stars ,hours.hours, business.review_count, business.address, business.postal_code 
FROM (business INNER JOIN category ON business.id = category.business_id) 
INNER JOIN hours ON hours.business_id = business.id 
WHERE business.city = 'Las Vegas' AND category.category = "Food" 
GROUP BY business.stars;

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
   There are more business that are still open listed as “useful” or “funny”. 
         
         
ii. Difference 2:
   The ones that are still open have more reviews on average than ones that are closed. 

+---------------+---------------------+--------------------------------+---------+ 
|  AVG(b.stars) | AVG(b.review_count) | COUNT(r.useful)+COUNT(r.funny) | is_open | 
+---------------+---------------------+--------------------------------+---------+ 
|           2.0 |                 4.0 |                              2 |       0 | 
| 2.96153846154 |       38.7692307692 |                             26 |       1 | 
+---------------+---------------------+--------------------------------+---------+      
         
         
SQL code used for analysis:
AVG(b.stars), AVG(b.review_count), COUNT(r.use ful)+COUNT(r.funny), is_open 
FROM business b 
INNER JOIN review r ON b.id = r.id 
GROUP BY b.is_open 
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   I studied some food companies to the determine their preference
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
    I picked several types of food companies including Food, Ethnic Food, Fast Food, Seafood, Specialty Food and Comfort Food. 
Then I will analyze their star ratings and number of reviews so that I can get some insights on which type of food company is popular on yelp.
                           
                  
iii. Output of your finished dataset:
+----------------+----------------------+---------------+-------------------+--------------+ 
| category       | Number_Of_Companies  |    AVG(stars) | AVG(review_count) | city         | 
+----------------+----------------------+---------------+-------------------+--------------+ 
| Ethnic Food    |                    5 |           4.5 |             723.0 | Cleveland    | 
| Seafood        |                    7 |           4.5 |               7.0 | Phoenix      | 
| Specialty Food |                   25 |           4.1 |             191.0 | Cleveland    | 
| Comfort Food   |                    7 |           4.0 |              30.0 | Chesterland  | 
| Food           |                   97 | 3.75773195876 |     101.845360825 | Middleton    |  
| Fast Food      |                   34 | 3.19117647059 |     35.2058823529 | Charlotte    | 
+----------------+----------------------+--------------+-------------------+---------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT c.category, COUNT(b.name) AS Number_Of_Companies, AVG(stars), AVG(review_count), b.city 
FROM (business b INNER JOIN hours h ON b.id = h.business_id) 
INNER JOIN category c ON c.business_id = b.id 
WHERE c.category IN ("Food", "Ethnic Food", "Fast Food", "Seafood", "Specialty Food", "Comfort Food") 
GROUP BY c.category 
ORDER BY AVG(stars) DESC